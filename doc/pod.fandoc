Overview [#overview]
********************
BedSheetDraft is a library for integrating [draft]`https://bitbucket.org/afrankvt/draft/` with
[afBedSheet]`http://repo.status302.com/doc/afBedSheet/#overview`.

With BedSheetDraft you can:
 - Use draft [Routes]`draft::Route`
 - Use draft [Flash]`draft::Flash`



Configuration [#configuration]
******************************
Simply add 'afBedSheetDraft' and 'draft' as project dependencies in your 'build.fan'...

pre>
  depends = ["sys 1.0", "afIoc 1.3", "afBedSheet 1.0", "draft 1.0", ... ]
<pre

...and thats it!

Because BedSheetDraft defines [pod meta-data]`afIoc::RegistryBuilder` for
[afIoc]`http://repo.status302.com/doc/afIoc/#overview`, no more configuration or setup is required.



Draft Routing [#draftRouting]
*****************************
Draft [Routes]`draft::Route` match request URIs and call request handlers with a single map of arguments. Contribute draft
routes the same way you would with [afBedSheet]`http://repo.status302.com/doc/afBedSheet/#overview` routes:

pre>
using draft::Route as DraftRoute

...

@Contribute { serviceType=Routes# }
static Void contributeRoutes(OrderedConfig conf) {

  conf.add(DraftRoute("/", "GET", PageHandler#index))
  conf.add(DraftRoute("/echo/{name}/{age}", "GET", PageHandler#print))

}
<pre



Draft Flash [#draftFlash]
*************************
The Draft [Flash]`draft::Flash` is contributed as a threaded service and may be accessed as such:

pre>
  @Inject
  private Flash flash
<pre

Note that 'Flash' is not a 'const' class so it may not be injected into 'const' services. Instead create a flash method that
accesses the [afIoc]`http://repo.status302.com/doc/afIoc/#overview` registry:

pre>
  using afIoc
  using draft::Flash as DraftFlash

  class ThreadedHandler {
    @Inject
    private Registry registry

    new make(|This|in) { in(this) }

    DraftFlash flash() {
      registry.dependencyByType(DraftFlash#)
    }
  }
<pre



Release Notes [#releaseNotes]
*****************************

v1.0.0 [#v1.0.0]
----------------
 - New: Initial release

